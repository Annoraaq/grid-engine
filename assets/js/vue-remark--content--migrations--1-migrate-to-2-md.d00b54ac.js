(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{CAS3:function(e,t,o){"use strict";o.r(t);var a=o("KHd+"),r=o("UQSp"),i=o("Kw5r");function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}i.a.config.optionMergeStrategies;var s={VueRemarkRoot:r.a},p=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(s).forEach((function(e){"object"===n(s[e])&&"function"==typeof s[e].render||"function"==typeof s[e]&&"function"==typeof s[e].options.render?t[e]=s[e]:o[e]=function(){return s[e]}}))},d=i.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",v={excerpt:null,title:"Migrate to Version 2",parent:"migrations"};var l=function(e){e.options[c]&&(e.options[c]=v),i.a.util.defineReactive(e.options,c,v),e.options.computed=d.computed({$frontmatter:function(){return e.options[c]}},e.options.computed)},h=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("VueRemarkRoot",[t("h1",{attrs:{id:"migrate-to-version-2"}},[t("a",{attrs:{href:"#migrate-to-version-2","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Migrate to Version 2")]),t("h2",{attrs:{id:"why-migrate"}},[t("a",{attrs:{href:"#why-migrate","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Why Migrate?")]),t("p",[e._v("Version 1 will not be maintained anymore. Version 2 gets rid of old deprecated methods and properties. This speeds up development.\nAs a bonus, version 2 uses the version of Phaser you are using for your game instead of bringing its own copy. This means that the file size of GridEngine 2 is < 100kb instead of ~1mb as in GridEngine 1.")]),t("p",[e._v("This guide helps you to migrate from version 1.x to version 2.x.")]),t("h2",{attrs:{id:"replace-moveleft-moveright-moveup-movedown"}},[t("a",{attrs:{href:"#replace-moveleft-moveright-moveup-movedown","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Replace "),t("code",{pre:!0},[e._v("moveLeft")]),e._v(", "),t("code",{pre:!0},[e._v("moveRight")]),e._v(", "),t("code",{pre:!0},[e._v("moveUp")]),e._v(", "),t("code",{pre:!0},[e._v("moveDown")])]),t("p",[e._v("These methods were removed because there is a generic method "),t("code",{pre:!0},[e._v("move")]),e._v(", that supports all 8 directions.\nFor instance, replace "),t("code",{pre:!0},[e._v('moveLeft("player")')]),e._v(" with "),t("code",{pre:!0},[e._v('move("player", "left")')]),e._v(";")]),t("h2",{attrs:{id:"replace-phasermathvector2"}},[t("a",{attrs:{href:"#replace-phasermathvector2","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Replace "),t("code",{pre:!0},[e._v("Phaser.Math.Vector2")])]),t("p",[e._v("This dependency to phaser was removed. In version 2, all the public methods of GridEngine will take and return "),t("a",{attrs:{href:"../../api/interfaces/Position.html"}},[e._v("Position")]),e._v(" objects instead of "),t("code",{pre:!0},[e._v("Phaser.Math.Vector2")]),e._v(". "),t("a",{attrs:{href:"../../api/interfaces/Position.html"}},[e._v("Position")]),e._v(" objects are simpler and only take x and y coordinates. Please note that a "),t("code",{pre:!0},[e._v("Phaser.Math.Vector2")]),e._v(" is also a "),t("code",{pre:!0},[e._v("Position")]),e._v(" because it has properties "),t("code",{pre:!0},[e._v("x")]),e._v(" and "),t("code",{pre:!0},[e._v("y")]),e._v(". So you can keep passing these as input if you like.")]),t("h2",{attrs:{id:"rename-positionchanged-to-positionchangestarted"}},[t("a",{attrs:{href:"#rename-positionchanged-to-positionchangestarted","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Rename "),t("code",{pre:!0},[e._v("positionChanged()")]),e._v(" to "),t("code",{pre:!0},[e._v("positionChangeStarted()")])]),t("p",[e._v("To keep the observable names consistent, "),t("code",{pre:!0},[e._v("positionChanged()")]),e._v(" has been renamed to "),t("code",{pre:!0},[e._v("positionChangeStarted()")]),e._v(". This is consistent to "),t("code",{pre:!0},[e._v("positionChangeFinished()")]),e._v(".")]),t("h2",{attrs:{id:"change-observable-return-types"}},[t("a",{attrs:{href:"#change-observable-return-types","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Change Observable Return Types")]),t("p",[e._v("In order to be consistent through all observables, the return types of "),t("code",{pre:!0},[e._v("movementStarted()")]),e._v(", "),t("code",{pre:!0},[e._v("movementStopped()")]),e._v(" and "),t("code",{pre:!0},[e._v("directionChanged()")]),e._v(" have been changed from an array [string, "),t("a",{attrs:{href:"../../api/enums/Direction.html"}},[e._v("Direction")]),e._v("] to an object: {charId: string, direction: "),t("a",{attrs:{href:"../../api/enums/Direction.html"}},[e._v("Direction")]),e._v("}.")]),t("p",[e._v("The following example code needs to be transformed as follows:")]),t("pre",[t("code",{pre:!0,attrs:{class:"language-js"}},[e._v("this.gridEngine.movementStarted().subscribe(([charId, direction]) => {\n  // ...\n});\n")])]),t("p",[e._v("becomes")]),t("pre",[t("code",{pre:!0,attrs:{class:"language-js"}},[e._v("this.gridEngine.movementStarted().subscribe(({ charId, direction }) => {\n  // ...\n});\n")])]),t("h2",{attrs:{id:"rename-tile-and-tile-layer-properties"}},[t("a",{attrs:{href:"#rename-tile-and-tile-layer-properties","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Rename Tile and Tile Layer Properties")]),t("p",[e._v("All tile and tile layer properties that previously started with "),t("code",{pre:!0},[e._v("gm_")]),e._v(" have been renamed and now start with "),t("code",{pre:!0},[e._v("ge_")]),e._v(".")]),t("p",[e._v("Further, the tile property "),t("code",{pre:!0},[e._v("collides")]),e._v(" is not a default property anymore. You can either rename it in your tilemap to "),t("code",{pre:!0},[e._v("ge_collide")]),e._v(" or you can set it as "),t("code",{pre:!0},[e._v("collisionTilePropertyName")]),e._v(" in the "),t("a",{attrs:{href:"../../api/interfaces/GridEngineConfig#htmlcollisionTilePropertyName"}},[e._v("config")]),e._v(".")]),t("h2",{attrs:{id:"remove-firstlayerabovechar-config-property"}},[t("a",{attrs:{href:"#remove-firstlayerabovechar-config-property","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Remove "),t("code",{pre:!0},[e._v("firstLayerAboveChar")]),e._v(" Config Property")]),t("p",[e._v("The deprecated "),t("code",{pre:!0},[e._v("firstLayerAboveChar")]),e._v(" config property has been removed. Use "),t("code",{pre:!0},[e._v("ge_alwaysTop")]),e._v(" tilemap layer property instead.")]),t("h2",{attrs:{id:"remove-characterindex-character-config-property"}},[t("a",{attrs:{href:"#remove-characterindex-character-config-property","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Remove "),t("code",{pre:!0},[e._v("characterIndex")]),e._v(" Character Config Property")]),t("p",[e._v("The deprecated "),t("code",{pre:!0},[e._v("characterIndex")]),e._v(" character config property has been removed. Use "),t("code",{pre:!0},[e._v("walkingAnimationMapping")]),e._v(" instead.")]),t("h2",{attrs:{id:"remove-walkinganimationenabled"}},[t("a",{attrs:{href:"#remove-walkinganimationenabled","aria-hidden":"true"}},[t("span",{staticClass:"autolink fa-solid fa-link"})]),e._v("Remove "),t("code",{pre:!0},[e._v("walkingAnimationEnabled")])]),t("p",[e._v("The character config property "),t("code",{pre:!0},[e._v("walkingAnimationEnabled")]),e._v(" has been removed. Simply don't provide a "),t("code",{pre:!0},[e._v("walkingAnimationMapping")]),e._v(" to disable walking animations.")])])}),[],!1,null,null,null);"function"==typeof p&&p(h),"function"==typeof l&&l(h);t.default=h.exports},UQSp:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}}}]);